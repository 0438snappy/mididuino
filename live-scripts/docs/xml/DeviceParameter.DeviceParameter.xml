<dumpObj>
<title class='class' module='DeviceParameter'>Instance of class 'class' as defined in module 'DeviceParameter'</title>
<documentation> This class represents a (automatable) parameter within a MIDI or
Audio DSP-Device. </documentation>
<builtin>
<name> __init__ </name>
<name>  __new__ </name>
</builtin>
<methods>
<method>
<name> __eq__ </name>
<doc> 
__eq__( (object)arg1, (DeviceParameter)arg2) -&gt; bool :

    C++ signature :
        bool __eq__(TWeakPtr&lt;TPyHandle&lt;ATimeable&gt; &gt;,TPyHandle&lt;ATimeable&gt;*)

__eq__( (object)arg1, (object)arg2) -&gt; bool :

    C++ signature :
        bool __eq__(TWeakPtr&lt;TPyViewData&lt;ATimeable&gt; &gt;,TPyViewData&lt;ATimeable&gt;*) </doc>
</method>
<method>
<name> __ne__ </name>
<doc> 
__ne__( (object)arg1, (DeviceParameter)arg2) -&gt; bool :

    C++ signature :
        bool __ne__(TWeakPtr&lt;TPyHandle&lt;ATimeable&gt; &gt;,TPyHandle&lt;ATimeable&gt;*)

__ne__( (object)arg1, (object)arg2) -&gt; bool :

    C++ signature :
        bool __ne__(TWeakPtr&lt;TPyViewData&lt;ATimeable&gt; &gt;,TPyViewData&lt;ATimeable&gt;*) </doc>
</method>
<method>
<name> __nonzero__ </name>
<doc> 
__nonzero__( (object)arg1) -&gt; bool :

    C++ signature :
        bool __nonzero__(TWeakPtr&lt;TPyHandle&lt;ATimeable&gt; &gt;)

__nonzero__( (object)arg1) -&gt; bool :

    C++ signature :
        bool __nonzero__(TWeakPtr&lt;TPyViewData&lt;ATimeable&gt; &gt;) </doc>
</method>
<method>
<name> __reduce__ </name>
<doc> no documentation </doc>
</method>
<method>
<name> __str__ </name>
<doc> 
__str__( (DeviceParameter)arg1) -&gt; object :
    Return a string representation of the parameters current value. To be used
    for display purposes only.  This value can include characters like 'db' or
    'hz', depending on the type of the parameter.

    C++ signature :
        TString __str__(TPyHandle&lt;ATimeable&gt;) </doc>
</method>
</methods>
<attributes>
<attribute>
<name> canonical_parent </name>
<type> Get the canonical parent of the device parameter. </type>
<value> property object at 0x2da3d78 </value>
</attribute>
<attribute>
<name> default_value </name>
<type> Return the default value for this parameter.  A Default value is only
available for non-quantized parameter types (see 'is_quantized'). </type>
<value> property object at 0x2da3d28 </value>
</attribute>
<attribute>
<name> is_enabled </name>
<type> Returns false if the parameter has been macro mapped or disabled by Max. </type>
<value> property object at 0x2da3c10 </value>
</attribute>
<attribute>
<name> is_quantized </name>
<type> Returns True, if this value is a boolean or integer like switch.
Non quantized values are continues float values. </type>
<value> property object at 0x2da3c60 </value>
</attribute>
<attribute>
<name> max </name>
<type> Returns const access to the upper value of the allowed range for
this parameter </type>
<value> property object at 0x2da3cd8 </value>
</attribute>
<attribute>
<name> min </name>
<type> Returns const access to the lower value of the allowed range for
this parameter </type>
<value> property object at 0x2da3cb0 </value>
</attribute>
<attribute>
<name> name </name>
<type> Returns const access the name of this parameter, as visible in Lives
automation choosers. </type>
<value> property object at 0x2da3b98 </value>
</attribute>
<attribute>
<name> original_name </name>
<type> Returns const access the original name of this parameter, unaffected of
any renamings. </type>
<value> property object at 0x2da3bc0 </value>
</attribute>
<attribute>
<name> value </name>
<type> Get/Set the current value (as visible in the GUI) this parameter.
The value must be inside the min/max properties of this device. </type>
<value> property object at 0x2da3d00 </value>
</attribute>
</attributes>
<listeners>
<listener>
<name> value </name>
</listener>
</listeners>
</dumpObj>
