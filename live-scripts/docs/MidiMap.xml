<dumpObj>
<title class='None' module='undefined'>Instance of class 'None' as defined in module 'undefined'</title>
<documentation> None </documentation>
<classes>
<class>
<name> MapMode </name>
<doc> no documentation </doc>
</class>
</classes>
<methods>
<method>
<name> forward_midi_cc </name>
<doc> 
forward_midi_cc( (int)arg1, (int)arg2, (int)arg3, (int)arg4) -&gt; bool :

    C++ signature :
        bool forward_midi_cc(unsigned long,unsigned long,long,long) </doc>
</method>
<method>
<name> forward_midi_note </name>
<doc> 
forward_midi_note( (int)arg1, (int)arg2, (int)arg3, (int)arg4) -&gt; bool :

    C++ signature :
        bool forward_midi_note(unsigned long,unsigned long,long,long) </doc>
</method>
<method>
<name> forward_midi_pitchbend </name>
<doc> 
forward_midi_pitchbend( (int)arg1, (int)arg2, (int)arg3) -&gt; bool :

    C++ signature :
        bool forward_midi_pitchbend(unsigned long,unsigned long,long) </doc>
</method>
<method>
<name> map_midi_cc </name>
<doc> 
map_midi_cc( (int)arg1, (DeviceParameter)arg2, (int)arg3, (int)arg4, (MapMode)arg5, (bool)arg6) -&gt; bool :

    C++ signature :
        bool map_midi_cc(unsigned long,TPyHandle&lt;ATimeable&gt;,long,long,NRemoteMapperTypes::TControllerMapMode,bool) </doc>
</method>
<method>
<name> map_midi_cc_with_feedback_map </name>
<doc> 
map_midi_cc_with_feedback_map( (int)arg1, (DeviceParameter)arg2, (int)arg3, (int)arg4, (MapMode)arg5, (CCFeedbackRule)arg6, (bool)arg7) -&gt; bool :

    C++ signature :
        bool map_midi_cc_with_feedback_map(unsigned long,TPyHandle&lt;ATimeable&gt;,long,long,NRemoteMapperTypes::TControllerMapMode,NPythonMidiMap::TCCFeedbackRule,bool) </doc>
</method>
<method>
<name> map_midi_note </name>
<doc> 
map_midi_note( (int)arg1, (DeviceParameter)arg2, (int)arg3, (int)arg4) -&gt; bool :

    C++ signature :
        bool map_midi_note(unsigned long,TPyHandle&lt;ATimeable&gt;,long,long) </doc>
</method>
<method>
<name> map_midi_note_with_feedback_map </name>
<doc> 
map_midi_note_with_feedback_map( (int)arg1, (DeviceParameter)arg2, (int)arg3, (int)arg4, (object)arg5) -&gt; bool :

    C++ signature :
        bool map_midi_note_with_feedback_map(unsigned long,TPyHandle&lt;ATimeable&gt;,long,long,NPythonMidiMap::TNoteFeedbackRule) </doc>
</method>
<method>
<name> map_midi_pitchbend </name>
<doc> 
map_midi_pitchbend( (int)arg1, (DeviceParameter)arg2, (int)arg3, (bool)arg4) -&gt; bool :

    C++ signature :
        bool map_midi_pitchbend(unsigned long,TPyHandle&lt;ATimeable&gt;,long,bool) </doc>
</method>
<method>
<name> map_midi_pitchbend_with_feedback_map </name>
<doc> 
map_midi_pitchbend_with_feedback_map( (int)arg1, (DeviceParameter)arg2, (int)arg3, (PitchBendFeedbackRule)arg4, (bool)arg5) -&gt; bool :

    C++ signature :
        bool map_midi_pitchbend_with_feedback_map(unsigned long,TPyHandle&lt;ATimeable&gt;,long,NPythonMidiMap::TPitchBendFeedbackRule,bool) </doc>
</method>
<method>
<name> send_feedback_for_parameter </name>
<doc> 
send_feedback_for_parameter( (int)arg1, (DeviceParameter)arg2) -&gt; None :

    C++ signature :
        void send_feedback_for_parameter(unsigned long,TPyHandle&lt;ATimeable&gt;) </doc>
</method>
</methods>
<attributes>
<attribute>
<name> CCFeedbackRule </name>
<type> type Boost.Python.class </type>
<value> class MidiMap.CCFeedbackRule </value>
</attribute>
<attribute>
<name> PitchBendFeedbackRule </name>
<type> type Boost.Python.class </type>
<value> class MidiMap.PitchBendFeedbackRule </value>
</attribute>
</attributes>
</dumpObj>
