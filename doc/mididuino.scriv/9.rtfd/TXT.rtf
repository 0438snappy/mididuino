{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf110
{\fonttbl\f0\fswiss\fcharset0 Optima-Regular;}
{\colortbl;\red255\green255\blue255;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\fi560\sl288\slmult1\sb160\ql\qnatural\pardirnatural

\f0\fs26 \cf0 In this first tutorial, we are going to write the Mididuino equivalent of the ubiquitous Hello World example. All this firmware does is show \'93HELLO WORLD\'94 on the Minicommand screen. This example shows two fundamental elements of a Mididuino sketch. \
The first is the 
\b setup()
\b0  function, which gets called once at the start of the firmware (that is, when the Minicommand is turned on). Due to cleverness in the Mididuino framework, you don\'92t need to define that function if it is empty. You just need to define it if you want to do something during the initialisation (basically, setting up the components of the sketch and showing the first active page).\
The second element is the GUI object. This object provides a big amount of functionality to access the 2x16 character display. In this script, we use the 
\b put_string_fill
\b0  method of the GUI object to display a string. The 
\b _fill
\b0  means that the method call will clear the rest of the line after printing the \'93HELLO WORLD\'94 message. There is a big amount of methods related to displaying information on the screen, be it as a static message or as a flashing message (disappearing after some amount of time).\
\
void setup() \{\
  GUI.put_string_fill("HELLO WORLD");\
\}}